// Code generated by wsdl2go. DO NOT EDIT.

package v1

import (
	"github.com/fiorix/wsdl2go/soap"
)

// Namespace was auto-generated from WSDL.
var Namespace = "http://example.org/math"

// NewWsMath creates an initializes a WsMath.
func NewWsMath(cli *soap.Client) WsMath {
	return &wsMath{cli}
}

// WsMath was auto-generated from WSDL
// and defines interface for the remote service. Useful for testing.
type WsMath interface {
	// Sum was auto-generated from WSDL.
	Sum(Add *Add) (*Answer, error)
}

// Add was auto-generated from WSDL.
type Add struct {
	X *float64 `xml:"x,omitempty" json:"x,omitempty" yaml:"x,omitempty"`
	Y *float64 `xml:"y,omitempty" json:"y,omitempty" yaml:"y,omitempty"`
}

// Answer was auto-generated from WSDL.
type Answer struct {
	Result *float64 `xml:"result,omitempty" json:"result,omitempty" yaml:"result,omitempty"`
}

// Operation wrapper for Sum.
// OperationAddMessage was auto-generated from WSDL.
type OperationAddMessage struct {
	Add *Add `xml:"add,omitempty" json:"add,omitempty" yaml:"add,omitempty"`
}

// Operation wrapper for Sum.
// OperationResultMessage was auto-generated from WSDL.
type OperationResultMessage struct {
	Answer *Answer `xml:"answer,omitempty" json:"answer,omitempty" yaml:"answer,omitempty"`
}

// wsMath implements the WsMath interface.
type wsMath struct {
	cli *soap.Client
}

// Sum was auto-generated from WSDL.
func (p *wsMath) Sum(Add *Add) (*Answer, error) {
	α := struct {
		OperationAddMessage `xml:"math:sum"`
	}{
		OperationAddMessage{
			Add,
		},
	}

	γ := struct {
		OperationResultMessage `xml:"sumResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://example.org/math/#sum", α, &γ); err != nil {
		return nil, err
	}
	return γ.Answer, nil
}
